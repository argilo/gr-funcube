# Copyright 2011,2012,2016,2018,2019 Free Software Foundation, Inc.
#
# This file was generated by gr_modtool, a tool from the GNU Radio framework
# This file is a part of gr-funcube
#
# SPDX-License-Identifier: GPL-3.0-or-later
#

########################################################################
# Setup library
########################################################################
include(GrPlatform) #define LIB_SUFFIX

list(APPEND funcube_sources
    fcd_impl.cc
    fcd_control_impl.cc
    fcdpp_impl.cc
    fcdpp_control_impl.cc
)

set(funcube_sources "${funcube_sources}" PARENT_SCOPE)
if(NOT funcube_sources)
    MESSAGE(STATUS "No C++ sources... skipping lib/")
    return()
endif(NOT funcube_sources)
list(APPEND funcube_libs ${LIBUSB_LIBRARIES} ${LIBHIDAPI_LIBRARIES})

add_library(gnuradio-funcube SHARED ${funcube_sources} )
target_link_libraries(gnuradio-funcube gnuradio::gnuradio-runtime gnuradio::gnuradio-audio gnuradio::gnuradio-blocks ${funcube_libs})
target_include_directories(gnuradio-funcube
    PRIVATE ${LIBHIDAPI_INCLUDE_DIR}
    PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/../include>
    PUBLIC $<INSTALL_INTERFACE:include>
  )
set_target_properties(gnuradio-funcube PROPERTIES DEFINE_SYMBOL "gnuradio_funcube_EXPORTS")

if(APPLE)
    set_target_properties(gnuradio-funcube PROPERTIES
        INSTALL_NAME_DIR "${CMAKE_INSTALL_PREFIX}/lib"
    )
endif(APPLE)

########################################################################
# Install built library files
########################################################################
include(GrMiscUtils)
GR_LIBRARY_FOO(gnuradio-funcube)

########################################################################
# Print summary
########################################################################
message(STATUS "Using install prefix: ${CMAKE_INSTALL_PREFIX}")
message(STATUS "Building for version: ${VERSION} / ${LIBVER}")

########################################################################
# Build and register unit test
########################################################################

find_package(Boost  REQUIRED
     OPTIONAL_COMPONENTS unit_test_framework)

if( Boost_unit_test_framework_FOUND )              
    include(GrTest)

    # If your unit tests require special include paths, add them here
    #include_directories()
    # List all files that contain Boost.UTF unit tests here
    list(APPEND test_funcube_sources
    qa_fcdpp.cc
    qa_fcdpp_control.cc
    qa_fcd.cc
    qa_fcd_control.cc
    )
    # Anything we need to link to for the unit tests go here
    list(APPEND GR_TEST_TARGET_DEPS gnuradio-funcube)

    if(NOT test_funcube_sources)
        MESSAGE(STATUS "No C++ unit tests... skipping")
        return()
    endif(NOT test_funcube_sources)

    foreach(qa_file ${test_funcube_sources})
    GR_ADD_CPP_TEST("funcube_${qa_file}"
        ${CMAKE_CURRENT_SOURCE_DIR}/${qa_file}
    )
   endforeach(qa_file)
else()
   message(STATUS " boost unit_test_framework is missing, so no tests will be generated")
endif()
